import { isWithinRange, isAtMax, isAtMin, valueToPercent, valueOf, formatDecimal, snapToStep, increment, decrement, percentToValue, clamp } from './number.mjs';

function rangy(o) {
  const wrap = (v) => rangy({ ...o, value: v });
  return {
    isInRange: isWithinRange(o.value, o),
    isAtMax: isAtMax(o.value, o),
    isAtMin: isAtMin(o.value, o),
    percent: valueToPercent(o.value, o),
    valueAsNumber: valueOf(o.value),
    value: formatDecimal(o.value, o),
    snapToStep: () => wrap(snapToStep(o.value, o.step)),
    increment: (s) => wrap(increment(o.value, s || o.step)),
    decrement: (s) => wrap(decrement(o.value, s || o.step)),
    toMax: () => wrap(o.max),
    toMin: () => wrap(o.min),
    fromPercent: (p) => wrap(percentToValue(p, o)),
    clamp: () => wrap(clamp(o.value, o))
  };
}

export { rangy };
