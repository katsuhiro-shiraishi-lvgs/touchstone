'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const date = require('@internationalized/date');

function createRegEx(sign) {
  let symbols = "\\s|\\.|-|/|\\\\|,|\\$|\\!|\\?|:|;";
  return new RegExp("(^|>|" + symbols + ")(" + sign + ")($|<|" + symbols + ")", "g");
}
function formatDate(value, formatString, locale, timeZone = "UTC") {
  const datetime = date.toCalendarDateTime(value);
  const date$1 = datetime.toDate(timeZone);
  const formats = {
    // Time in ms
    T: date$1.getTime(),
    // Minutes
    m: date$1.toLocaleString(locale, { minute: "numeric" }),
    mm: date$1.toLocaleString(locale, { minute: "2-digit" }),
    // Seconds
    s: date$1.toLocaleString(locale, { second: "numeric" }),
    ss: date$1.toLocaleString(locale, { second: "2-digit" }),
    // Hours
    h: date$1.toLocaleString(locale, { hour: "numeric", hour12: true }),
    hh: date$1.toLocaleString(locale, { hour: "2-digit", hour12: true }),
    H: date$1.toLocaleString(locale, { hour: "numeric", hour12: false }),
    HH: date$1.toLocaleString(locale, { hour: "2-digit", hour12: false }),
    // Day period
    aa: date$1.toLocaleString(locale, { hour: "numeric", hour12: true }).toLowerCase(),
    AA: date$1.toLocaleString(locale, { hour: "numeric", hour12: true }).toUpperCase(),
    // Day of week
    E: date$1.toLocaleString(locale, { weekday: "short" }),
    EE: date$1.toLocaleString(locale, { weekday: "short" }),
    EEE: date$1.toLocaleString(locale, { weekday: "short" }),
    EEEE: date$1.toLocaleString(locale, { weekday: "long" }),
    // Date of month
    d: datetime.day,
    dd: date$1.toLocaleString(locale, { day: "2-digit" }),
    // Months
    M: datetime.month + 1,
    MM: date$1.toLocaleString(locale, { month: "2-digit" }),
    MMM: date$1.toLocaleString(locale, { month: "short" }),
    MMMM: date$1.toLocaleString(locale, { month: "long" }),
    // Years
    yy: date$1.toLocaleString(locale, { year: "2-digit" }),
    yyyy: date$1.toLocaleString(locale, { year: "numeric" }),
    YY: date$1.toLocaleString(locale, { year: "2-digit" }),
    YYYY: date$1.toLocaleString(locale, { year: "numeric" })
  };
  let result = formatString;
  for (const key in formats) {
    result = result.replace(createRegEx(key), "$1" + formats[key] + "$3");
  }
  return result;
}

exports.formatDate = formatDate;
