'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const date = require('@internationalized/date');
const constrain = require('./constrain.js');

function getTodayDate(timeZone) {
  return date.today(timeZone ?? date.getLocalTimeZone());
}
function getNextDay(date) {
  return date.add({ days: 1 });
}
function getPreviousDay(date) {
  return date.subtract({ days: 1 });
}
function setMonth(date, month) {
  return date.set({ month });
}
function setYear(date, year) {
  return date.set({ year });
}
function setCalendar(date$1, calendar) {
  return date.toCalendar(date.toCalendarDateTime(date$1), calendar);
}
function setDate(date, startDate, isDateUnavailable, locale, minValue, maxValue) {
  let result;
  result = constrain.constrainValue(date, minValue, maxValue);
  result = getPreviousAvailableDate(date, startDate, locale, isDateUnavailable);
  return result;
}
function getPreviousAvailableDate(date, minValue, locale, isDateUnavailable) {
  if (!isDateUnavailable) {
    return date;
  }
  while (date.compare(minValue) >= 0 && isDateUnavailable(date, locale)) {
    date = date.subtract({ days: 1 });
  }
  if (date.compare(minValue) >= 0) {
    return date;
  }
}

exports.getNextDay = getNextDay;
exports.getPreviousAvailableDate = getPreviousAvailableDate;
exports.getPreviousDay = getPreviousDay;
exports.getTodayDate = getTodayDate;
exports.setCalendar = setCalendar;
exports.setDate = setDate;
exports.setMonth = setMonth;
exports.setYear = setYear;
