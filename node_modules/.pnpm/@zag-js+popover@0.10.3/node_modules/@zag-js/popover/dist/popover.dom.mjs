import { createScope } from '@zag-js/dom-query';
import { getFocusables, getTabbables, getFirstTabbable, getLastTabbable } from '@zag-js/tabbable';
import { runIfFn } from '@zag-js/utils';

const dom = createScope({
  getActiveEl: (ctx) => dom.getDoc(ctx).activeElement,
  getAnchorId: (ctx) => ctx.ids?.anchor ?? `popover:${ctx.id}:anchor`,
  getTriggerId: (ctx) => ctx.ids?.trigger ?? `popover:${ctx.id}:trigger`,
  getContentId: (ctx) => ctx.ids?.content ?? `popover:${ctx.id}:content`,
  getPositionerId: (ctx) => ctx.ids?.positioner ?? `popover:${ctx.id}:popper`,
  getArrowId: (ctx) => ctx.ids?.arrow ?? `popover:${ctx.id}:arrow`,
  getTitleId: (ctx) => ctx.ids?.title ?? `popover:${ctx.id}:title`,
  getDescriptionId: (ctx) => ctx.ids?.description ?? `popover:${ctx.id}:desc`,
  getCloseTriggerId: (ctx) => ctx.ids?.closeTrigger ?? `popover:${ctx.id}:close`,
  getAnchorEl: (ctx) => dom.getById(ctx, dom.getAnchorId(ctx)),
  getTriggerEl: (ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),
  getContentEl: (ctx) => dom.getById(ctx, dom.getContentId(ctx)),
  getPositionerEl: (ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),
  getTitleEl: (ctx) => dom.getById(ctx, dom.getTitleId(ctx)),
  getDescriptionEl: (ctx) => dom.getById(ctx, dom.getDescriptionId(ctx)),
  getFocusableEls: (ctx) => getFocusables(dom.getContentEl(ctx)),
  getFirstFocusableEl: (ctx) => dom.getFocusableEls(ctx)[0],
  getDocTabbableEls: (ctx) => getTabbables(dom.getDoc(ctx).body),
  getTabbableEls: (ctx) => getTabbables(dom.getContentEl(ctx), "if-empty"),
  getFirstTabbableEl: (ctx) => getFirstTabbable(dom.getContentEl(ctx), "if-empty"),
  getLastTabbableEl: (ctx) => getLastTabbable(dom.getContentEl(ctx), "if-empty"),
  getInitialFocusEl: (ctx) => {
    let el = runIfFn(ctx.initialFocusEl);
    if (!el && ctx.autoFocus)
      el = dom.getFirstFocusableEl(ctx);
    if (!el)
      el = dom.getContentEl(ctx);
    return el;
  }
});

export { dom };
