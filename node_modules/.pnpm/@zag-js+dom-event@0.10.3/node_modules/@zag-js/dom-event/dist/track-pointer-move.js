'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const textSelection = require('@zag-js/text-selection');
const addDomEvent = require('./add-dom-event.js');
const getEventPoint = require('./get-event-point.js');

function trackPointerMove(doc, handlers) {
  const { onPointerMove, onPointerUp } = handlers;
  const handleMove = (event) => {
    const point = getEventPoint.getEventPoint(event);
    const distance = Math.sqrt(point.x ** 2 + point.y ** 2);
    const moveBuffer = event.pointerType === "touch" ? 10 : 5;
    if (distance < moveBuffer)
      return;
    if (event.pointerType === "mouse" && event.button === 0) {
      onPointerUp();
      return;
    }
    onPointerMove({ point, event });
  };
  const cleanups = [
    addDomEvent.addDomEvent(doc, "pointermove", handleMove, false),
    addDomEvent.addDomEvent(doc, "pointerup", onPointerUp, false),
    addDomEvent.addDomEvent(doc, "pointercancel", onPointerUp, false),
    addDomEvent.addDomEvent(doc, "contextmenu", onPointerUp, false),
    textSelection.disableTextSelection({ doc })
  ];
  return () => {
    cleanups.forEach((cleanup) => cleanup());
  };
}

exports.trackPointerMove = trackPointerMove;
