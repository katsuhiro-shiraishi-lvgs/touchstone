import { createScope, queryAll, nextById, prevById } from '@zag-js/dom-query';
import { first, last } from '@zag-js/utils';

const dom = createScope({
  getRootId: (ctx) => ctx.ids?.root ?? `accordion:${ctx.id}`,
  getItemId: (ctx, value) => ctx.ids?.item?.(value) ?? `accordion:${ctx.id}:item:${value}`,
  getContentId: (ctx, value) => ctx.ids?.content?.(value) ?? `accordion:${ctx.id}:content:${value}`,
  getTriggerId: (ctx, value) => ctx.ids?.trigger?.(value) ?? `accordion:${ctx.id}:trigger:${value}`,
  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),
  getTriggers: (ctx) => {
    const ownerId = CSS.escape(dom.getRootId(ctx));
    const selector = `[aria-controls][data-ownedby='${ownerId}']:not([disabled])`;
    return queryAll(dom.getRootEl(ctx), selector);
  },
  getFirstTriggerEl: (ctx) => first(dom.getTriggers(ctx)),
  getLastTriggerEl: (ctx) => last(dom.getTriggers(ctx)),
  getNextTriggerEl: (ctx, id) => nextById(dom.getTriggers(ctx), dom.getTriggerId(ctx, id)),
  getPrevTriggerEl: (ctx, id) => prevById(dom.getTriggers(ctx), dom.getTriggerId(ctx, id))
});

export { dom };
