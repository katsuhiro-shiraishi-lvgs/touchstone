'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const proxy = require('./proxy.js');

const defaultCompareFn = (prev, next) => Object.is(prev, next);
function subscribeKey(obj, key, fn, sync, compareFn) {
  let prev = Reflect.get(proxy.snapshot(obj), key);
  const isEqual = compareFn || defaultCompareFn;
  function onSnapshotChange() {
    const snap = proxy.snapshot(obj);
    if (isEqual(prev, snap[key]))
      return;
    fn(snap[key]);
    prev = Reflect.get(snap, key);
  }
  return proxy.subscribe(obj, onSnapshotChange, sync);
}

exports.subscribeKey = subscribeKey;
