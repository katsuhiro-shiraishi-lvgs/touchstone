import { type DateValue } from "@internationalized/date";
import type { DateView, MachineContext } from "./date-picker.types";
export declare function adjustStartAndEndDate(value: DateValue[]): DateValue[];
export declare function isDateWithinRange(date: DateValue, value: (DateValue | null)[]): boolean;
export declare function sortDates(values: DateValue[]): DateValue[];
export declare function matchView<T>(view: DateView, values: {
    year: T;
    month: T;
    day: T;
}): T;
export declare function formatValue(ctx: Pick<MachineContext, "locale" | "timeZone" | "selectionMode" | "value">): string;
export declare function getNextTriggerLabel(view: DateView): string;
export declare function getPrevTriggerLabel(view: DateView): string;
export declare function getRoleDescription(view: DateView): string;
export declare function getViewTriggerLabel(view: DateView): string;
export declare function getInputPlaceholder(locale: string): string;
export declare const isValidCharacter: (char: string | null, separator: string) => boolean;
export declare const ensureValidCharacters: (value: string, separator: string) => string;
export declare function getLocaleSeparator(locale: string): string;
