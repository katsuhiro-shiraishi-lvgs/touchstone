import { compact } from './packages/utilities/core/src/object.mjs';
import { isObject } from './packages/utilities/core/src/guard.mjs';

function deepMerge(source, ...objects) {
  for (const obj of objects) {
    const target = compact(obj);
    for (const key in target) {
      if (isObject(obj[key])) {
        if (!source[key]) {
          source[key] = {};
        }
        deepMerge(source[key], obj[key]);
      } else {
        source[key] = obj[key];
      }
    }
  }
  return source;
}

export { deepMerge };
