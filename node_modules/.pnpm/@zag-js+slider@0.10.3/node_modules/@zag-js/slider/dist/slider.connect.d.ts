import type { NormalizeProps, PropTypes } from "@zag-js/types";
import type { Send, State } from "./slider.types";
export declare function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): {
    /**
     * Whether the slider is focused.
     */
    isFocused: boolean;
    /**
     * Whether the slider is being dragged.
     */
    isDragging: boolean;
    /**
     * The value of the slider.
     */
    value: number;
    /**
     * The value of the slider as a percent.
     */
    percent: number;
    /**
     * Function to set the value of the slider.
     */
    setValue(value: number): void;
    /**
     * Returns the value of the slider at the given percent.
     */
    getPercentValue: (percent: number) => number;
    /**
     * Returns the percent of the slider at the given value.
     */
    getValuePercent: (value: number) => number;
    /**
     * Function to focus the slider.
     */
    focus(): void;
    /**
     * Function to increment the value of the slider by the step.
     */
    increment(): void;
    /**
     * Function to decrement the value of the slider by the step.
     */
    decrement(): void;
    rootProps: T["element"];
    labelProps: T["label"];
    thumbProps: T["element"];
    hiddenInputProps: T["input"];
    outputProps: T["output"];
    trackProps: T["element"];
    rangeProps: T["element"];
    controlProps: T["element"];
    markerGroupProps: T["element"];
    getMarkerProps({ value }: {
        value: number;
    }): T["element"];
};
