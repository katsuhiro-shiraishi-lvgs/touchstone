import { PositioningOptions } from "@zag-js/popper";
import type { NormalizeProps, PropTypes } from "@zag-js/types";
import type { Api, GroupProps, ItemProps, LabelProps, OptionItemProps, Send, Service, State } from "./menu.types";
export declare function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): {
    /**
     * Whether the menu is open
     */
    isOpen: boolean;
    /**
     * Function to open the menu
     */
    open(): void;
    /**
     * Function to close the menu
     */
    close(): void;
    /**
     * The id of the currently highlighted menuitem
     */
    highlightedId: string | null;
    /**
     * Function to set the highlighted menuitem
     */
    setHighlightedId(id: string): void;
    /**
     * Function to register a parent menu. This is used for submenus
     */
    setParent(parent: Service): void;
    /**
     * Function to register a child menu. This is used for submenus
     */
    setChild(child: Service): void;
    /**
     * The value of the menu options item
     */
    value: Record<string, string | string[]> | undefined;
    /**
     * Function to set the value of the menu options item
     */
    setValue(name: string, value: any): void;
    /**
     * Function to check if an option is checked
     */
    isOptionChecked(opts: OptionItemProps): boolean | undefined;
    /**
     * Function to reposition the popover
     */
    setPositioning(options?: Partial<PositioningOptions>): void;
    contextTriggerProps: T["element"];
    getTriggerItemProps<A extends Api>(childApi: A): T["element"];
    triggerProps: T["button"];
    positionerProps: T["element"];
    arrowProps: T["element"];
    arrowTipProps: T["element"];
    contentProps: T["element"];
    separatorProps: T["element"];
    getItemProps(options: ItemProps): T["element"];
    getOptionItemProps(option: OptionItemProps): T["element"];
    getItemGroupLabelProps(options: LabelProps): T["element"];
    getItemGroupProps(options: GroupProps): T["element"];
};
