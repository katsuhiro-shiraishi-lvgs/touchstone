import type { NormalizeProps, PropTypes } from "@zag-js/types";
import type { InputProps, RadioProps, Send, State } from "./radio-group.types";
export declare function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): {
    /**
     * The current value of the radio group
     */
    value: string | null;
    /**
     * Function to set the value of the radio group
     */
    setValue(value: string): void;
    /**
     * Function to clear the value of the radio group
     */
    clearValue(): void;
    /**
     * Function to focus the radio group
     */
    focus: () => void;
    /**
     * Function to blur the currently focused radio input in the radio group
     */
    blur(): void;
    /**
     * Returns the state details of a radio input
     */
    getRadioState: <T_1 extends RadioProps>(props: T_1) => {
        isInteractive: boolean;
        isReadOnly: boolean | undefined;
        isInvalid: boolean | undefined;
        isDisabled: boolean | undefined;
        isChecked: boolean;
        isFocused: boolean;
        isHovered: boolean;
        isActive: boolean;
    };
    rootProps: T["element"];
    labelProps: T["element"];
    getRadioProps(props: RadioProps): T["label"];
    getRadioLabelProps(props: RadioProps): T["element"];
    getRadioControlProps(props: RadioProps): T["element"];
    getRadioInputProps(props: InputProps): T["input"];
    indicatorProps: T["element"];
};
