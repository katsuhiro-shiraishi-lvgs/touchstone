function connect(state, send, normalize) {
  const [status] = state.tags;
  const unmount = state.matches("exited");
  const duration = status === "enter" ? state.context.enterDuration : state.context.exitDuration;
  function transition(config) {
    const { base, variants } = config;
    const properties = [.../* @__PURE__ */ new Set([...Object.keys(variants.enter), ...Object.keys(variants.exit)])];
    const { style } = normalize.element({
      style: {
        ...base,
        ...variants[status],
        transitionDuration: `${duration}ms`,
        transitionProperty: properties.join(", ")
      }
    });
    return style;
  }
  return {
    /**
     * The current status of the transition.
     */
    status,
    /**
     * Whether to unmount the element
     */
    unmount,
    /**
     * Function to toggle the transition.
     */
    toggle() {
      send("MOUNTED.TOGGLE");
    },
    /**
     * Returns the transition styles to apply to the element.
     */
    transition,
    /**
     * Returns the transition styles to apply to a group of elements.
     */
    transitionGroup(configs) {
      return Object.keys(configs).reduce((acc, config) => {
        acc[config] = transition(configs[config]);
        return acc;
      }, {});
    }
  };
}

export { connect };
