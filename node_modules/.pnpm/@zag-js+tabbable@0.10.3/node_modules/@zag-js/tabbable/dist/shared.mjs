const isHTMLElement = (element) => typeof element === "object" && element !== null && element.nodeType === 1;
const isFrame = (element) => isHTMLElement(element) && element.tagName === "IFRAME";
function isVisible(el) {
  if (!isHTMLElement(el))
    return false;
  return el.offsetWidth > 0 || el.offsetHeight > 0 || el.getClientRects().length > 0;
}
function hasNegativeTabIndex(element) {
  const tabIndex = parseInt(element.getAttribute("tabindex") || "0", 10);
  return tabIndex < 0;
}
const focusableSelector = "input:not([type='hidden']):not([disabled]), select:not([disabled]), textarea:not([disabled]), a[href], button:not([disabled]), [tabindex], iframe, object, embed, area[href], audio[controls], video[controls], [contenteditable]:not([contenteditable='false']), details > summary:first-of-type";

export { focusableSelector, hasNegativeTabIndex, isFrame, isHTMLElement, isVisible };
