import type { NormalizeProps, PropTypes } from "@zag-js/types";
import type { Send, SlideProps, State } from "./carousel.types";
export declare function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): {
    /**
     * The current index of the carousel
     */
    index: number;
    /**
     * The current scroll progress of the carousel
     */
    scrollProgress: number;
    /**
     * Whether the carousel is currently auto-playing
     */
    isAutoplay: boolean;
    /**
     * Whether the carousel is can scroll to the next slide
     */
    canScrollNext: boolean;
    /**
     * Whether the carousel is can scroll to the previous slide
     */
    canScrollPrev: boolean;
    /**
     * Function to scroll to a specific slide index
     */
    scrollTo(index: number, jump?: boolean): void;
    /**
     * Function to scroll to the next slide
     */
    scrollToNext(): void;
    /**
     * Function to scroll to the previous slide
     */
    scrollToPrevious(): void;
    /**
     *  Returns the state of a specific slide
     */
    getSlideState: (props: SlideProps) => {
        valueText: string;
        isCurrent: boolean;
        isNext: boolean;
        isPrevious: boolean;
        isInView: boolean;
    };
    /**
     * Function to start/resume autoplay
     */
    play(): void;
    /**
     * Function to pause autoplay
     */
    pause(): void;
    rootProps: T["element"];
    viewportProps: T["element"];
    slideGroupProps: T["element"];
    getSlideProps(props: SlideProps): T["element"];
    prevTriggerProps: T["button"];
    nextTriggerProps: T["button"];
    indicatorGroupProps: T["element"];
    getIndicatorProps(props: {
        index: number;
    }): T["button"];
};
