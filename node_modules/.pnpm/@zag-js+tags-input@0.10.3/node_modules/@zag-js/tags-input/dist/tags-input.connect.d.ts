import type { NormalizeProps, PropTypes } from "@zag-js/types";
import type { Send, State, TagProps } from "./tags-input.types";
export declare function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): {
    /**
     * Whether the tags are empty
     */
    isEmpty: boolean;
    /**
     * The value of the tags entry input.
     */
    inputValue: string;
    /**
     * The value of the tags as an array of strings.
     */
    value: string[];
    /**
     * The value of the tags as a string.
     */
    valueAsString: string;
    /**
     * The number of the tags.
     */
    count: number;
    /**
     * Whether the tags have reached the max limit.
     */
    isAtMax: boolean;
    /**
     * Function to set the value of the tags.
     */
    setValue(value: string[]): void;
    /**
     * Function to clear the value of the tags.
     */
    clearValue(id?: string): void;
    /**
     * Function to add a tag to the tags.
     */
    addValue(value: string): void;
    /**
     * Function to set the value of a tag at the given index.
     */
    setValueAtIndex(index: number, value: string): void;
    /**
     * Function to set the value of the tags entry input.
     */
    setInputValue(value: string): void;
    /**
     * Function to clear the value of the tags entry input.
     */
    clearInputValue(): void;
    /**
     * Function to focus the tags entry input.
     */
    focus(): void;
    rootProps: T["element"];
    labelProps: T["label"];
    controlProps: T["element"];
    inputProps: T["input"];
    hiddenInputProps: T["input"];
    getTagProps(options: TagProps): T["element"];
    getTagInputProps(options: TagProps): T["input"];
    getTagDeleteTriggerProps(options: TagProps): T["button"];
    clearTriggerProps: T["button"];
};
