"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  default: () => src_default,
  loadConfig: () => loadConfig,
  pandacss: () => pandacss
});
module.exports = __toCommonJS(src_exports);

// ../../node_modules/.pnpm/tsup@7.1.0_postcss@8.4.25_typescript@5.1.6/node_modules/tsup/assets/cjs_shims.js
var getImportMetaUrl = () => typeof document === "undefined" ? new URL("file:" + __filename).href : document.currentScript && document.currentScript.src || new URL("main.js", document.baseURI).href;
var importMetaUrl = /* @__PURE__ */ getImportMetaUrl();

// src/index.ts
var import_node = require("@pandacss/node");
var import_module = require("module");
var require2 = (0, import_module.createRequire)(importMetaUrl);
var PLUGIN_NAME = "pandacss";
var interopDefault = (obj) => obj && obj.__esModule ? obj.default : obj;
var loadConfig = () => interopDefault(require2("@pandacss/postcss"));
var pandacss = (options = {}) => {
  const { configPath } = options;
  const builder = new import_node.Builder();
  return {
    postcssPlugin: PLUGIN_NAME,
    plugins: [
      async function(root, result) {
        if (!builder.isValidRoot(root)) {
          return;
        }
        await builder.setup({ configPath });
        await builder.extract();
        builder.registerDependency((dep) => {
          result.messages.push({
            ...dep,
            plugin: PLUGIN_NAME,
            parent: result.opts.from
          });
        });
        builder.write(root);
        root.walk((node) => {
          if (!node.source) {
            node.source = root.source;
          }
        });
      }
    ]
  };
};
pandacss.postcss = true;
var src_default = pandacss;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  loadConfig,
  pandacss
});
