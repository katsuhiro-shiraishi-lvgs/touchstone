import type { HTMLAttributes, DetailedHTMLProps, ButtonHTMLAttributes } from 'react';
import type { TriggerProps, ContentProps, type Context } from '@zag-js/tabs';
import { type Optional } from '../types';
export type UseTabsProps = Optional<Context, 'id'> & {
    defaultValue?: Context['value'];
};
export type UseTabsReturn = ReturnType<typeof useTabs>;
export declare const useTabs: (props: UseTabsProps) => {
    value: string | null;
    focusedValue: string | null;
    previousValues: string[];
    setValue(value: string): void;
    clearValue(): void;
    setIndicatorRect(id: string | null | undefined): void;
    rootProps: HTMLAttributes<HTMLElement>;
    tablistProps: HTMLAttributes<HTMLElement>;
    getTriggerProps(props: TriggerProps): DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
    contentGroupProps: HTMLAttributes<HTMLElement>;
    getContentProps({ value }: ContentProps): HTMLAttributes<HTMLElement>;
    indicatorProps: HTMLAttributes<HTMLElement>;
};
