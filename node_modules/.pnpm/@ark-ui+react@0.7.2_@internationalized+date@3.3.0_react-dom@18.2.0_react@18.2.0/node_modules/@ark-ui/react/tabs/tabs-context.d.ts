import type { TriggerProps, ContentProps } from '@zag-js/tabs';
import type { Provider, HTMLAttributes, DetailedHTMLProps, ButtonHTMLAttributes } from 'react';
import { type UseTabsReturn } from './use-tabs';
export type TabsContext = UseTabsReturn;
export declare const TabsProvider: Provider<{
    value: string | null;
    focusedValue: string | null;
    previousValues: string[];
    setValue(value: string): void;
    clearValue(): void;
    setIndicatorRect(id: string | null | undefined): void;
    rootProps: HTMLAttributes<HTMLElement>;
    tablistProps: HTMLAttributes<HTMLElement>;
    getTriggerProps(props: TriggerProps): DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
    contentGroupProps: HTMLAttributes<HTMLElement>;
    getContentProps({ value }: ContentProps): HTMLAttributes<HTMLElement>;
    indicatorProps: HTMLAttributes<HTMLElement>;
}>, useTabsContext: () => {
    value: string | null;
    focusedValue: string | null;
    previousValues: string[];
    setValue(value: string): void;
    clearValue(): void;
    setIndicatorRect(id: string | null | undefined): void;
    rootProps: HTMLAttributes<HTMLElement>;
    tablistProps: HTMLAttributes<HTMLElement>;
    getTriggerProps(props: TriggerProps): DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
    contentGroupProps: HTMLAttributes<HTMLElement>;
    getContentProps({ value }: ContentProps): HTMLAttributes<HTMLElement>;
    indicatorProps: HTMLAttributes<HTMLElement>;
};
