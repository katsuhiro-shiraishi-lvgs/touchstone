'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react = require('@zag-js/react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const forwardRef = require('../forward-ref.cjs');
const runIfFn = require('../run-if-fn.cjs');
const checkboxContext = require('./checkbox-context.cjs');
const useCheckbox = require('./use-checkbox.cjs');

const Checkbox = forwardRef.forwardRef((props, ref) => {
  const [useCheckboxProps, { children, ...labelProps }] = createSplitProps.createSplitProps()(
    props,
    [
      "checked",
      "dir",
      "disabled",
      "form",
      "getRootNode",
      "id",
      "ids",
      "invalid",
      "name",
      "onChange",
      "required",
      "value"
    ]
  );
  const checkbox = useCheckbox.useCheckbox(useCheckboxProps);
  const mergedProps = react.mergeProps(checkbox.rootProps, labelProps);
  const view = runIfFn.runIfFn(children, checkbox);
  return /* @__PURE__ */ jsxRuntime.jsx(checkboxContext.CheckboxProvider, { value: checkbox, children: /* @__PURE__ */ jsxRuntime.jsx(factory.ark.label, { ...mergedProps, ref, children: view }) });
});

exports.Checkbox = Checkbox;
