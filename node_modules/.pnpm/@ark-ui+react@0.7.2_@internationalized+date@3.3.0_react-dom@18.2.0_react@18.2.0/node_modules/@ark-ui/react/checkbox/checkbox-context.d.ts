import type { CheckedState } from '@zag-js/checkbox/dist/checkbox.types';
import type { Provider, DetailedHTMLProps, LabelHTMLAttributes, HTMLAttributes, InputHTMLAttributes } from 'react';
import { type UseCheckboxReturn } from './use-checkbox';
export type CheckboxContext = UseCheckboxReturn;
export declare const CheckboxProvider: Provider<{
    isChecked: boolean;
    isDisabled: boolean | undefined;
    isIndeterminate: boolean;
    isFocused: boolean | undefined;
    checkedState: CheckedState;
    setChecked(checked: CheckedState): void;
    toggleChecked(): void;
    rootProps: DetailedHTMLProps<LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>;
    labelProps: HTMLAttributes<HTMLElement>;
    controlProps: HTMLAttributes<HTMLElement>;
    inputProps: DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;
}>, useCheckboxContext: () => {
    isChecked: boolean;
    isDisabled: boolean | undefined;
    isIndeterminate: boolean;
    isFocused: boolean | undefined;
    checkedState: CheckedState;
    setChecked(checked: CheckedState): void;
    toggleChecked(): void;
    rootProps: DetailedHTMLProps<LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>;
    labelProps: HTMLAttributes<HTMLElement>;
    controlProps: HTMLAttributes<HTMLElement>;
    inputProps: DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;
};
