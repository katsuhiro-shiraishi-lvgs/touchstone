import type { DetailedHTMLProps, LabelHTMLAttributes, HTMLAttributes, InputHTMLAttributes } from 'react';
import type { CheckedState } from '@zag-js/checkbox/dist/checkbox.types';
import * as checkbox from '@zag-js/checkbox';
import { type Optional } from '../types';
export type UseCheckboxProps = Optional<checkbox.Context, 'id'>;
export type UseCheckboxReturn = ReturnType<typeof useCheckbox>;
export declare const useCheckbox: (props: UseCheckboxProps) => {
    isChecked: boolean;
    isDisabled: boolean | undefined;
    isIndeterminate: boolean;
    isFocused: boolean | undefined;
    checkedState: CheckedState;
    setChecked(checked: CheckedState): void;
    toggleChecked(): void;
    rootProps: DetailedHTMLProps<LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>;
    labelProps: HTMLAttributes<HTMLElement>;
    controlProps: HTMLAttributes<HTMLElement>;
    inputProps: DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;
};
