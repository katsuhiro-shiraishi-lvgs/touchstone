import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import { forwardRef } from '../forward-ref.mjs';
import { runIfFn } from '../run-if-fn.mjs';
import { CheckboxProvider } from './checkbox-context.mjs';
import { useCheckbox } from './use-checkbox.mjs';

const Checkbox = forwardRef((props, ref) => {
  const [useCheckboxProps, { children, ...labelProps }] = createSplitProps()(
    props,
    [
      "checked",
      "dir",
      "disabled",
      "form",
      "getRootNode",
      "id",
      "ids",
      "invalid",
      "name",
      "onChange",
      "required",
      "value"
    ]
  );
  const checkbox = useCheckbox(useCheckboxProps);
  const mergedProps = mergeProps(checkbox.rootProps, labelProps);
  const view = runIfFn(children, checkbox);
  return /* @__PURE__ */ jsx(CheckboxProvider, { value: checkbox, children: /* @__PURE__ */ jsx(ark.label, { ...mergedProps, ref, children: view }) });
});

export { Checkbox };
