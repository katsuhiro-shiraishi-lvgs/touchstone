import type { ColorFormat, ColorChannelInputProps } from '@zag-js/color-picker/dist/color-picker.types';
import type { Color, ColorChannel, ColorAreaProps, ColorChannelProps, ColorSwatchProps } from '@zag-js/color-picker';
import type { Provider, HTMLAttributes, DetailedHTMLProps, InputHTMLAttributes, ButtonHTMLAttributes } from 'react';
import { type UseColorPickerReturn } from './use-color-picker';
export type ColorPickerContext = UseColorPickerReturn;
export declare const ColorPickerProvider: Provider<{
    isDragging: boolean;
    value: string;
    valueAsColor: Color;
    channels: [ColorChannel, ColorChannel, ColorChannel];
    setColor(value: string | Color): void;
    setChannelValue(channel: ColorChannel, value: number): void;
    setFormat(format: ColorFormat): void;
    contentProps: HTMLAttributes<HTMLElement>;
    getAreaProps(props: ColorAreaProps): HTMLAttributes<HTMLElement>;
    getAreaGradientProps(props: ColorAreaProps): HTMLAttributes<HTMLElement>;
    getAreaThumbProps(props: ColorAreaProps): HTMLAttributes<HTMLElement>;
    getChannelSliderTrackProps(props: ColorChannelProps): HTMLAttributes<HTMLElement>;
    getChannelSliderBackgroundProps(props: ColorChannelProps): HTMLAttributes<HTMLElement>;
    getChannelSliderThumbProps(props: ColorChannelProps): HTMLAttributes<HTMLElement>;
    getChannelInputProps(props: ColorChannelInputProps): DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;
    eyeDropperTriggerProps: DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
    getSwatchBackgroundProps(props: ColorSwatchProps): HTMLAttributes<HTMLElement>;
    getSwatchProps(props: ColorSwatchProps): HTMLAttributes<HTMLElement>;
}>, useColorPickerContext: () => {
    isDragging: boolean;
    value: string;
    valueAsColor: Color;
    channels: [ColorChannel, ColorChannel, ColorChannel];
    setColor(value: string | Color): void;
    setChannelValue(channel: ColorChannel, value: number): void;
    setFormat(format: ColorFormat): void;
    contentProps: HTMLAttributes<HTMLElement>;
    getAreaProps(props: ColorAreaProps): HTMLAttributes<HTMLElement>;
    getAreaGradientProps(props: ColorAreaProps): HTMLAttributes<HTMLElement>;
    getAreaThumbProps(props: ColorAreaProps): HTMLAttributes<HTMLElement>;
    getChannelSliderTrackProps(props: ColorChannelProps): HTMLAttributes<HTMLElement>;
    getChannelSliderBackgroundProps(props: ColorChannelProps): HTMLAttributes<HTMLElement>;
    getChannelSliderThumbProps(props: ColorChannelProps): HTMLAttributes<HTMLElement>;
    getChannelInputProps(props: ColorChannelInputProps): DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;
    eyeDropperTriggerProps: DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
    getSwatchBackgroundProps(props: ColorSwatchProps): HTMLAttributes<HTMLElement>;
    getSwatchProps(props: ColorSwatchProps): HTMLAttributes<HTMLElement>;
};
