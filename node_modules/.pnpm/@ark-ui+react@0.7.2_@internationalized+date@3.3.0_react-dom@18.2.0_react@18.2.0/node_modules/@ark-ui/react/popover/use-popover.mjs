import * as popover from '@zag-js/popover';
import { useMachine, normalizeProps } from '@zag-js/react';
import { useId, useEffect } from 'react';
import { useLatestRef } from '../use-latest-ref.mjs';
import { useEnvironmentContext } from '../environment/environment-context.mjs';

const usePopover = (props) => {
  const { isOpen, ...restProps } = props;
  const getRootNode = useEnvironmentContext();
  const context = {
    id: useId(),
    getRootNode,
    ...restProps
  };
  const [state, send] = useMachine(popover.machine(context), { context });
  const api = popover.connect(state, send, normalizeProps);
  const apiRef = useLatestRef(api);
  useEffect(() => {
    if (isOpen == null) {
      return;
    }
    if (isOpen && !state.matches("open")) {
      apiRef.current.open();
    } else if (!isOpen && !state.matches("closed")) {
      apiRef.current.close();
    }
  }, [isOpen, state, apiRef]);
  return api;
};

export { usePopover };
