import type { PositioningOptions } from '@zag-js/combobox';
import type { Provider, HTMLAttributes, DetailedHTMLProps, ButtonHTMLAttributes } from 'react';
import { type UsePopoverReturn } from './use-popover';
export type PopoverContext = UsePopoverReturn;
export declare const PopoverProvider: Provider<{
    portalled: boolean;
    isOpen: boolean;
    open(): void;
    close(): void;
    setPositioning(options?: Partial<PositioningOptions> | undefined): void;
    arrowProps: HTMLAttributes<HTMLElement>;
    arrowTipProps: HTMLAttributes<HTMLElement>;
    anchorProps: HTMLAttributes<HTMLElement>;
    triggerProps: DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
    positionerProps: HTMLAttributes<HTMLElement>;
    contentProps: HTMLAttributes<HTMLElement>;
    titleProps: HTMLAttributes<HTMLElement>;
    descriptionProps: HTMLAttributes<HTMLElement>;
    closeTriggerProps: DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
}>, usePopoverContext: () => {
    portalled: boolean;
    isOpen: boolean;
    open(): void;
    close(): void;
    setPositioning(options?: Partial<PositioningOptions> | undefined): void;
    arrowProps: HTMLAttributes<HTMLElement>;
    arrowTipProps: HTMLAttributes<HTMLElement>;
    anchorProps: HTMLAttributes<HTMLElement>;
    triggerProps: DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
    positionerProps: HTMLAttributes<HTMLElement>;
    contentProps: HTMLAttributes<HTMLElement>;
    titleProps: HTMLAttributes<HTMLElement>;
    descriptionProps: HTMLAttributes<HTMLElement>;
    closeTriggerProps: DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
};
