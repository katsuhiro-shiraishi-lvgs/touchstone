import type { HTMLAttributes } from 'react';
import type { PaginationRange, EllipsisProps, PageTriggerProps } from '@zag-js/pagination/dist/pagination.types';
import * as pagination from '@zag-js/pagination';
import { type Optional } from '../types';
export type UsePaginationProps = Optional<pagination.Context, 'id'> & {
    defaultPage?: pagination.Context['page'];
};
export declare const usePagination: (props: UsePaginationProps) => {
    page: number;
    totalPages: number;
    pages: PaginationRange;
    previousPage: number | null;
    nextPage: number | null;
    pageRange: {
        start: number;
        end: number;
    };
    slice<T_1>(data: T_1[]): T_1[];
    isFirstPage: boolean;
    isLastPage: boolean;
    setCount(count: number): void;
    setPageSize(size: number): void;
    setPage(page: number): void;
    rootProps: HTMLAttributes<HTMLElement>;
    getEllipsisProps(props: EllipsisProps): HTMLAttributes<HTMLElement>;
    getPageTriggerProps(page: PageTriggerProps): HTMLAttributes<HTMLElement>;
    prevPageTriggerProps: HTMLAttributes<HTMLElement>;
    nextPageTriggerProps: HTMLAttributes<HTMLElement>;
};
export type UsePaginationReturn = ReturnType<typeof usePagination>;
