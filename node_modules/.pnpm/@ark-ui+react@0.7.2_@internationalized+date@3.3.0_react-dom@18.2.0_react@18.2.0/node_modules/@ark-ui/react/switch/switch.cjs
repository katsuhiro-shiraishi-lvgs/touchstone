'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react = require('@zag-js/react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const forwardRef = require('../forward-ref.cjs');
const runIfFn = require('../run-if-fn.cjs');
const switchContext = require('./switch-context.cjs');
const useSwitch = require('./use-switch.cjs');

const Switch = forwardRef.forwardRef((props, ref) => {
  const [switchProps, { children, ...labelProps }] = createSplitProps.createSplitProps()(props, [
    "checked",
    "dir",
    "disabled",
    "focusable",
    "form",
    "getRootNode",
    "id",
    "ids",
    "invalid",
    "label",
    "name",
    "onChange",
    "readOnly",
    "required",
    "value"
  ]);
  const api = useSwitch.useSwitch(switchProps);
  const view = runIfFn.runIfFn(children, api);
  const mergedProps = react.mergeProps(api.rootProps, labelProps);
  return /* @__PURE__ */ jsxRuntime.jsx(switchContext.SwitchProvider, { value: api, children: /* @__PURE__ */ jsxRuntime.jsx(factory.ark.label, { ...mergedProps, ref, children: view }) });
});

exports.Switch = Switch;
