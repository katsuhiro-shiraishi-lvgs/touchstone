'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react = require('@zag-js/react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const forwardRef = require('../forward-ref.cjs');
const ratingGroupContext = require('./rating-group-context.cjs');
const useRatingGroup = require('./use-rating-group.cjs');

const RatingGroup = forwardRef.forwardRef((props, ref) => {
  const [useRatingProps, inputProps] = createSplitProps.createSplitProps()(props, [
    "allowHalf",
    "autoFocus",
    "defaultValue",
    "dir",
    "disabled",
    "form",
    "getRootNode",
    "id",
    "ids",
    "max",
    "name",
    "onChange",
    "onHover",
    "readOnly",
    "translations",
    "value"
  ]);
  const ratingGroup = useRatingGroup.useRatingGroup(useRatingProps);
  const mergedProps = react.mergeProps(ratingGroup.rootProps, inputProps);
  return /* @__PURE__ */ jsxRuntime.jsx(ratingGroupContext.RatingGroupProvider, { value: ratingGroup, children: /* @__PURE__ */ jsxRuntime.jsxs(factory.ark.div, { ...mergedProps, children: [
    /* @__PURE__ */ jsxRuntime.jsx(factory.ark.input, { ...ratingGroup.hiddenInputProps, ref }),
    props.children
  ] }) });
});

exports.RatingGroup = RatingGroup;
