import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import { forwardRef } from '../forward-ref.mjs';
import { runIfFn } from '../run-if-fn.mjs';
import { EditableProvider } from './editable-context.mjs';
import { useEditable } from './use-editable.mjs';

const Editable = forwardRef((props, ref) => {
  const [useEditableProps, { children, ...divProps }] = createSplitProps()(
    props,
    [
      "activationMode",
      "autoResize",
      "defaultValue",
      "dir",
      "disabled",
      "finalFocusEl",
      "form",
      "getRootNode",
      "id",
      "ids",
      "invalid",
      "maxLength",
      "name",
      "onCancel",
      "onChange",
      "onEdit",
      "onInteractOutside",
      "onSubmit",
      "placeholder",
      "readOnly",
      "selectOnFocus",
      "startWithEditView",
      "submitMode",
      "translations",
      "value"
    ]
  );
  const editable = useEditable(useEditableProps);
  const mergedProps = mergeProps(editable.rootProps, divProps);
  const view = runIfFn(children, editable);
  return /* @__PURE__ */ jsx(EditableProvider, { value: editable, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref, children: view }) });
});

export { Editable };
