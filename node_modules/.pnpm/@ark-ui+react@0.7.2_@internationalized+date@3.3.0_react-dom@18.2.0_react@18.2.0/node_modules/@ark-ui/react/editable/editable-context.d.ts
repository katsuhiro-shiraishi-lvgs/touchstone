import type { Provider, HTMLAttributes, DetailedHTMLProps, LabelHTMLAttributes, InputHTMLAttributes, ButtonHTMLAttributes } from 'react';
import { type UseEditableReturn } from './use-editable';
export type EditableContext = UseEditableReturn;
export declare const EditableProvider: Provider<{
    isEditing: boolean;
    isValueEmpty: boolean;
    value: string;
    setValue(value: string): void;
    clearValue(): void;
    edit(): void;
    cancel(): void;
    submit(): void;
    rootProps: HTMLAttributes<HTMLElement>;
    areaProps: HTMLAttributes<HTMLElement>;
    labelProps: DetailedHTMLProps<LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>;
    inputProps: DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;
    previewProps: HTMLAttributes<HTMLElement>;
    editTriggerProps: DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
    controlProps: HTMLAttributes<HTMLElement>;
    submitTriggerProps: DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
    cancelTriggerProps: DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
}>, useEditableContext: () => {
    isEditing: boolean;
    isValueEmpty: boolean;
    value: string;
    setValue(value: string): void;
    clearValue(): void;
    edit(): void;
    cancel(): void;
    submit(): void;
    rootProps: HTMLAttributes<HTMLElement>;
    areaProps: HTMLAttributes<HTMLElement>;
    labelProps: DetailedHTMLProps<LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>;
    inputProps: DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;
    previewProps: HTMLAttributes<HTMLElement>;
    editTriggerProps: DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
    controlProps: HTMLAttributes<HTMLElement>;
    submitTriggerProps: DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
    cancelTriggerProps: DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
};
