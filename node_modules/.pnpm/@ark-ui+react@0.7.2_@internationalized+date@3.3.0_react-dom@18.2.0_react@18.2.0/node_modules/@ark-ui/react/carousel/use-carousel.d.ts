import type { HTMLAttributes, DetailedHTMLProps, ButtonHTMLAttributes } from 'react';
import type { SlideProps } from '@zag-js/carousel/dist/carousel.types';
import * as carousel from '@zag-js/carousel';
import { type Optional } from '../types';
export type UseCarouselProps = Optional<carousel.Context, 'id'>;
export type UseCarouselReturn = ReturnType<typeof useCarousel>;
export declare const useCarousel: (props: UseCarouselProps) => {
    index: number;
    scrollProgress: number;
    isAutoplay: boolean;
    canScrollNext: boolean;
    canScrollPrev: boolean;
    scrollTo(index: number, jump?: boolean | undefined): void;
    scrollToNext(): void;
    scrollToPrevious(): void;
    getSlideState: (props: SlideProps) => {
        valueText: string;
        isCurrent: boolean;
        isNext: boolean;
        isPrevious: boolean;
        isInView: boolean;
    };
    play(): void;
    pause(): void;
    rootProps: HTMLAttributes<HTMLElement>;
    viewportProps: HTMLAttributes<HTMLElement>;
    slideGroupProps: HTMLAttributes<HTMLElement>;
    getSlideProps(props: SlideProps): HTMLAttributes<HTMLElement>;
    prevTriggerProps: DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
    nextTriggerProps: DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
    indicatorGroupProps: HTMLAttributes<HTMLElement>;
    getIndicatorProps(props: {
        index: number;
    }): DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
};
