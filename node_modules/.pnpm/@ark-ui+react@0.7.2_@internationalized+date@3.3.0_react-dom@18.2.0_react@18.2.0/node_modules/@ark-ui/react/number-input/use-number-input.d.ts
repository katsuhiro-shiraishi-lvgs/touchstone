import type { HTMLAttributes, DetailedHTMLProps, LabelHTMLAttributes, InputHTMLAttributes, ButtonHTMLAttributes } from 'react';
import * as numberInput from '@zag-js/number-input';
import { type Optional } from '../types';
export type UseNumberInputProps = Optional<numberInput.Context, 'id'> & {
    defaultValue?: numberInput.Context['value'];
};
export declare const useNumberInput: (props: UseNumberInputProps) => {
    isFocused: boolean;
    isInvalid: boolean;
    isValueEmpty: boolean;
    value: string;
    valueAsNumber: number;
    setValue(value: string | number): void;
    clearValue(): void;
    increment(): void;
    decrement(): void;
    setToMax(): void;
    setToMin(): void;
    focus(): void;
    blur(): void;
    rootProps: HTMLAttributes<HTMLElement>;
    labelProps: DetailedHTMLProps<LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>;
    controlProps: HTMLAttributes<HTMLElement>;
    inputProps: DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;
    decrementTriggerProps: DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
    incrementTriggerProps: DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
    scrubberProps: HTMLAttributes<HTMLElement>;
};
export type UseNumberInputReturn = ReturnType<typeof useNumberInput>;
