'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react = require('@zag-js/react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const forwardRef = require('../forward-ref.cjs');
const numberInputContext = require('./number-input-context.cjs');
const useNumberInput = require('./use-number-input.cjs');

const NumberInput = forwardRef.forwardRef((props, ref) => {
  const [useNumberInputProps, divProps] = createSplitProps.createSplitProps()(props, [
    "allowMouseWheel",
    "allowOverflow",
    "clampValueOnBlur",
    "defaultValue",
    "dir",
    "disabled",
    "focusInputOnChange",
    "form",
    "format",
    "getRootNode",
    "id",
    "ids",
    "inputMode",
    "invalid",
    "max",
    "maxFractionDigits",
    "min",
    "minFractionDigits",
    "name",
    "onBlur",
    "onChange",
    "onFocus",
    "onInvalid",
    "parse",
    "pattern",
    "readOnly",
    "spinOnPress",
    "step",
    "translations",
    "validateCharacter",
    "value"
  ]);
  const pinInput = useNumberInput.useNumberInput(useNumberInputProps);
  const mergedProps = react.mergeProps(pinInput.rootProps, divProps);
  return /* @__PURE__ */ jsxRuntime.jsx(numberInputContext.NumberInputProvider, { value: pinInput, children: /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref }) });
});

exports.NumberInput = NumberInput;
