import type { HTMLAttributes, DetailedHTMLProps, ButtonHTMLAttributes } from 'react';
import * as accordion from '@zag-js/accordion';
import { type Optional } from '../types';
export type UseAccordionProps = Optional<accordion.Context, 'id'> & {
    defaultValue?: accordion.Context['value'];
};
export type UseAccordionReturn = ReturnType<typeof useAccordion>;
export declare const useAccordion: (props: UseAccordionProps) => {
    rootProps: HTMLAttributes<HTMLElement>;
    getItemProps(props: accordion.ItemProps): HTMLAttributes<HTMLElement>;
    getContentProps(props: accordion.ItemProps): HTMLAttributes<HTMLElement>;
    getTriggerProps(props: accordion.ItemProps): DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
    focusedValue: string | null;
    value: string | string[] | null;
    setValue: (value: string | string[]) => void;
    getItemState: (props: accordion.ItemProps) => accordion.ItemState;
};
