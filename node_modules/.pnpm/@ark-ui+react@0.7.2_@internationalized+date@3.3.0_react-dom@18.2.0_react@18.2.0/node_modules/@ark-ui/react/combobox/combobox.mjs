import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import { forwardRef } from '../forward-ref.mjs';
import { runIfFn } from '../run-if-fn.mjs';
import { ComboboxProvider } from './combobox-context.mjs';
import { useCombobox } from './use-combobox.mjs';

const Combobox = forwardRef((props, ref) => {
  const [useComboboxProps, { children, ...divProps }] = createSplitProps()(
    props,
    [
      "allowCustomValue",
      "ariaHidden",
      "autoFocus",
      "blurOnSelect",
      "dir",
      "disabled",
      "focusOnClear",
      "form",
      "getRootNode",
      "id",
      "ids",
      "inputBehavior",
      "inputValue",
      "invalid",
      "isCustomValue",
      "loop",
      "name",
      "onClose",
      "onHighlight",
      "onInputChange",
      "onInputChange",
      "onInteractOutside",
      "onOpen",
      "onSelect",
      "openOnClick",
      "placeholder",
      "positioning",
      "readOnly",
      "selectInputOnFocus",
      "selectionBehavior",
      "selectionData",
      "selectOnTab",
      "translations"
    ]
  );
  const combobox = useCombobox(useComboboxProps);
  const mergedProps = mergeProps(combobox.rootProps, divProps);
  const view = runIfFn(children, combobox);
  return /* @__PURE__ */ jsx(ComboboxProvider, { value: combobox, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref, children: view }) });
});

export { Combobox };
