'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react = require('@zag-js/react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const forwardRef = require('../forward-ref.cjs');
const runIfFn = require('../run-if-fn.cjs');
const comboboxContext = require('./combobox-context.cjs');
const useCombobox = require('./use-combobox.cjs');

const Combobox = forwardRef.forwardRef((props, ref) => {
  const [useComboboxProps, { children, ...divProps }] = createSplitProps.createSplitProps()(
    props,
    [
      "allowCustomValue",
      "ariaHidden",
      "autoFocus",
      "blurOnSelect",
      "dir",
      "disabled",
      "focusOnClear",
      "form",
      "getRootNode",
      "id",
      "ids",
      "inputBehavior",
      "inputValue",
      "invalid",
      "isCustomValue",
      "loop",
      "name",
      "onClose",
      "onHighlight",
      "onInputChange",
      "onInputChange",
      "onInteractOutside",
      "onOpen",
      "onSelect",
      "openOnClick",
      "placeholder",
      "positioning",
      "readOnly",
      "selectInputOnFocus",
      "selectionBehavior",
      "selectionData",
      "selectOnTab",
      "translations"
    ]
  );
  const combobox = useCombobox.useCombobox(useComboboxProps);
  const mergedProps = react.mergeProps(combobox.rootProps, divProps);
  const view = runIfFn.runIfFn(children, combobox);
  return /* @__PURE__ */ jsxRuntime.jsx(comboboxContext.ComboboxProvider, { value: combobox, children: /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref, children: view }) });
});

exports.Combobox = Combobox;
