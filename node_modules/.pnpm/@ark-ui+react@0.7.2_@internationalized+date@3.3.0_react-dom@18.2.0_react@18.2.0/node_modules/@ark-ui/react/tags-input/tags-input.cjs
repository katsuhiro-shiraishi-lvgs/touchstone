'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react = require('@zag-js/react');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const forwardRef = require('../forward-ref.cjs');
const runIfFn = require('../run-if-fn.cjs');
const tagsInputContext = require('./tags-input-context.cjs');
const useTagsInput = require('./use-tags-input.cjs');

const TagsInput = forwardRef.forwardRef((props, ref) => {
  const [useTagsInputProps, { children, ...inputProps }] = createSplitProps.createSplitProps()(
    props,
    [
      "addOnPaste",
      "allowEditTag",
      "allowOverflow",
      "autoFocus",
      "blurBehavior",
      "defaultValue",
      "delimiter",
      "dir",
      "disabled",
      "form",
      "getRootNode",
      "id",
      "ids",
      "inputValue",
      "invalid",
      "max",
      "maxLength",
      "name",
      "onChange",
      "onHighlight",
      "onInvalid",
      "onInteractOutside",
      "onTagUpdate",
      "readOnly",
      "translations",
      "validate",
      "value"
    ]
  );
  const tagsInput = useTagsInput.useTagsInput(useTagsInputProps);
  const mergedProps = react.mergeProps(tagsInput.rootProps, inputProps);
  const view = runIfFn.runIfFn(children, tagsInput);
  return /* @__PURE__ */ jsxRuntime.jsx(tagsInputContext.TagsInputProvider, { value: tagsInput, children: /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref, children: view }) });
});

exports.TagsInput = TagsInput;
