import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { createSplitProps } from '../create-split-props.mjs';
import { ark } from '../factory.mjs';
import { forwardRef } from '../forward-ref.mjs';
import { runIfFn } from '../run-if-fn.mjs';
import { TagsInputProvider } from './tags-input-context.mjs';
import { useTagsInput } from './use-tags-input.mjs';

const TagsInput = forwardRef((props, ref) => {
  const [useTagsInputProps, { children, ...inputProps }] = createSplitProps()(
    props,
    [
      "addOnPaste",
      "allowEditTag",
      "allowOverflow",
      "autoFocus",
      "blurBehavior",
      "defaultValue",
      "delimiter",
      "dir",
      "disabled",
      "form",
      "getRootNode",
      "id",
      "ids",
      "inputValue",
      "invalid",
      "max",
      "maxLength",
      "name",
      "onChange",
      "onHighlight",
      "onInvalid",
      "onInteractOutside",
      "onTagUpdate",
      "readOnly",
      "translations",
      "validate",
      "value"
    ]
  );
  const tagsInput = useTagsInput(useTagsInputProps);
  const mergedProps = mergeProps(tagsInput.rootProps, inputProps);
  const view = runIfFn(children, tagsInput);
  return /* @__PURE__ */ jsx(TagsInputProvider, { value: tagsInput, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref, children: view }) });
});

export { TagsInput };
