import type { HTMLAttributes } from 'react';
import type { PanelId } from '@zag-js/splitter/dist/splitter.types';
import * as splitter from '@zag-js/splitter';
import { type Optional } from '../types';
export type UseSplitterProps = Optional<splitter.Context, 'id'> & {
    defaultSize?: splitter.Context['size'];
};
export type UseSplitterReturn = ReturnType<typeof useSplitter>;
export declare const useSplitter: (props: UseSplitterProps) => {
    isFocused: boolean;
    isDragging: boolean;
    bounds: {
        min: number;
        max: number;
    } | undefined;
    setToMinSize(id: PanelId): void;
    setToMaxSize(id: PanelId): void;
    setSize(id: PanelId, size: number): void;
    getResizeTriggerState(props: splitter.ResizeTriggerProps): {
        isDisabled: boolean;
        isFocused: boolean;
        panelIds: string[];
        min: number | undefined;
        max: number | undefined;
        value: number;
    };
    rootProps: HTMLAttributes<HTMLElement>;
    getPanelProps(props: splitter.PanelProps): HTMLAttributes<HTMLElement>;
    getResizeTriggerProps(props: splitter.ResizeTriggerProps): HTMLAttributes<HTMLElement>;
};
