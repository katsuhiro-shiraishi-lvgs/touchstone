import { Color, type ColorChannel, type ColorFormat } from "@zag-js/color-utils";
import { NormalizeProps, type PropTypes } from "@zag-js/types";
import { ColorAreaProps, ColorChannelInputProps, ColorChannelProps, ColorSwatchProps, Send, State } from "./color-picker.types";
export declare function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): {
    /**
     * Whether the color picker is being dragged
     */
    isDragging: boolean;
    /**
     * The current color value (as a string)
     */
    value: string;
    /**
     * The current color value (as a Color object)
     */
    valueAsColor: Color;
    /**
     * The current color channels of the color
     */
    channels: [ColorChannel, ColorChannel, ColorChannel];
    /**
     * Function to set the color value
     */
    setColor(value: string | Color): void;
    /**
     * Function to set the color value of a specific channel
     */
    setChannelValue(channel: ColorChannel, value: number): void;
    /**
     * Function to set the color format
     */
    setFormat(format: ColorFormat): void;
    contentProps: T["element"];
    getAreaProps(props: ColorAreaProps): T["element"];
    getAreaGradientProps(props: ColorAreaProps): T["element"];
    getAreaThumbProps(props: ColorAreaProps): T["element"];
    getChannelSliderTrackProps(props: ColorChannelProps): T["element"];
    getChannelSliderBackgroundProps(props: ColorChannelProps): T["element"];
    getChannelSliderThumbProps(props: ColorChannelProps): T["element"];
    getChannelInputProps(props: ColorChannelInputProps): T["input"];
    eyeDropperTriggerProps: T["button"];
    getSwatchBackgroundProps(props: ColorSwatchProps): T["element"];
    getSwatchProps(props: ColorSwatchProps): T["element"];
};
