import { type ColorChannel } from "@zag-js/color-utils";
import { type Point } from "@zag-js/dom-event";
import type { MachineContext as Ctx } from "./color-picker.types";
export declare const dom: {
    getRootNode: (ctx: {
        getRootNode?: (() => Node | ShadowRoot | Document) | undefined;
    }) => ShadowRoot | Document;
    getDoc: (ctx: {
        getRootNode?: (() => Node | ShadowRoot | Document) | undefined;
    }) => Document;
    getWin: (ctx: {
        getRootNode?: (() => Node | ShadowRoot | Document) | undefined;
    }) => Window & typeof globalThis;
    getActiveElement: (ctx: {
        getRootNode?: (() => Node | ShadowRoot | Document) | undefined;
    }) => HTMLElement | null;
    getById: <T extends HTMLElement = HTMLElement>(ctx: {
        getRootNode?: (() => Node | ShadowRoot | Document) | undefined;
    }, id: string) => T | null;
    queryById: <T_1 extends HTMLElement = HTMLElement>(ctx: {
        getRootNode?: (() => Node | ShadowRoot | Document) | undefined;
    }, id: string) => T_1;
} & {
    getContentId: (ctx: Ctx) => string;
    getAreaId: (ctx: Ctx) => string;
    getAreaGradientId: (ctx: Ctx) => string;
    getAreaThumbId: (ctx: Ctx) => string;
    getChannelSliderTrackId: (ctx: Ctx, channel: ColorChannel) => string;
    getChannelInputId: (ctx: Ctx, channel: string) => string;
    getChannelSliderThumbId: (ctx: Ctx, channel: ColorChannel) => string;
    getContentEl: (ctx: Ctx) => HTMLElement;
    getAreaThumbEl: (ctx: Ctx) => HTMLElement;
    getChannelSliderThumbEl: (ctx: Ctx, channel: ColorChannel) => HTMLElement;
    getChannelInputEl: (ctx: Ctx, channel: string) => HTMLInputElement;
    getAreaEl: (ctx: Ctx) => HTMLElement;
    getAreaValueFromPoint(ctx: Ctx, point: Point): {
        x: number;
        y: number;
    };
    getChannelSliderTrackEl: (ctx: Ctx, channel: ColorChannel) => HTMLElement;
    getChannelSliderValueFromPoint(ctx: Ctx, point: Point, channel: ColorChannel): {
        x: number;
        y: number;
    };
    getChannelInputEls: (ctx: Ctx) => HTMLInputElement[];
};
