export declare function toArray<T>(v: T | T[] | undefined | null): T[];
export declare const fromLength: (length: number) => number[];
export declare const first: <T>(v: T[]) => T | undefined;
export declare const last: <T>(v: T[]) => T | undefined;
export declare const isEmpty: <T>(v: T[]) => boolean;
export declare const has: <T>(v: T[], t: any) => boolean;
export declare const add: <T>(v: T[], ...items: T[]) => T[];
export declare const remove: <T>(v: T[], item: T) => T[];
export declare const removeAt: <T>(v: T[], i: number) => T[];
export declare function clear<T>(v: T[]): T[];
export type IndexOptions = {
    step?: number;
    loop?: boolean;
};
export declare function nextIndex<T>(v: T[], idx: number, opts?: IndexOptions): number;
export declare function next<T>(v: T[], idx: number, opts?: IndexOptions): T | undefined;
export declare function prevIndex<T>(v: T[], idx: number, opts?: IndexOptions): number;
export declare function prev<T>(v: T[], index: number, opts?: IndexOptions): T | undefined;
export declare const chunk: <T>(v: T[], size: number) => T[][];
