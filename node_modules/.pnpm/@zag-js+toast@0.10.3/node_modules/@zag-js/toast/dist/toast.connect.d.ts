import type { NormalizeProps, PropTypes } from "@zag-js/types";
import type { Type, Placement, Send,  State } from './toast.types';
export declare function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): {
    /**
     * The type of the toast.
     */
    type: Type;
    /**
     * The title of the toast.
     */
    title: string | undefined;
    /**
     *  The description of the toast.
     */
    description: string | undefined;
    /**
     * The current placement of the toast.
     */
    placement: Placement;
    /**
     * Whether the toast is visible.
     */
    isVisible: boolean;
    /**
     * Whether the toast is paused.
     */
    isPaused: boolean;
    /**
     * Whether the toast is in RTL mode.
     */
    isRtl: boolean;
    /**
     * Function to pause the toast (keeping it visible).
     */
    pause(): void;
    /**
     * Function to resume the toast dismissing.
     */
    resume(): void;
    /**
     * Function to instantly dismiss the toast.
     */
    dismiss(): void;
    /**
     * Function render the toast in the DOM (based on the defined `render` property)
     */
    render(): any;
    rootProps: T["element"];
    titleProps: T["element"];
    descriptionProps: T["element"];
    closeTriggerProps: T["button"];
};
