import { isModifiedEvent } from '@zag-js/dom-event';
import { increment, formatDecimal, clamp, decrement } from '@zag-js/number-utils';

const utils = {
  isValidNumericEvent: (ctx, event) => {
    if (event.key == null)
      return true;
    const isModifier = isModifiedEvent(event);
    const isSingleKey = event.key.length === 1;
    if (isModifier || !isSingleKey)
      return true;
    return ctx.validateCharacter?.(event.key) ?? utils.isFloatingPoint(event.key);
  },
  isFloatingPoint: (v) => /^[0-9+\-.]$/.test(v),
  sanitize: (ctx, value) => {
    return value.split("").filter(ctx.validateCharacter ?? utils.isFloatingPoint).join("");
  },
  increment: (ctx, step) => {
    const value = increment(ctx.value, step ?? ctx.step);
    return formatDecimal(clamp(value, ctx), ctx);
  },
  decrement: (ctx, step) => {
    const value = decrement(ctx.value, step ?? ctx.step);
    return formatDecimal(clamp(value, ctx), ctx);
  },
  clamp: (ctx) => {
    return formatDecimal(clamp(ctx.value, ctx), ctx);
  },
  parse: (ctx, value) => {
    return ctx.parse?.(value) ?? value;
  },
  format: (ctx, value) => {
    const _val = value.toString();
    return ctx.format?.(_val) ?? _val;
  },
  round: (ctx) => {
    return formatDecimal(ctx.value, ctx);
  }
};

export { utils };
