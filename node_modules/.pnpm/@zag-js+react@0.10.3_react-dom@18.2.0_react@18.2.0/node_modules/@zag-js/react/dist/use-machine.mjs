import { useConstant } from './use-constant.mjs';
import { useSafeLayoutEffect } from './use-layout-effect.mjs';
import { useSnapshot } from './use-snapshot.mjs';

function useService(machine, options) {
  const { actions, state: hydratedState, context } = options ?? {};
  const service = useConstant(() => {
    const instance = typeof machine === "function" ? machine() : machine;
    return context ? instance.withContext(context) : instance;
  });
  useSafeLayoutEffect(() => {
    service.start(hydratedState);
    if (service.state.can("SETUP")) {
      service.send("SETUP");
    }
    return () => {
      service.stop();
    };
  }, []);
  service.setOptions({ actions });
  service.setContext(context);
  return service;
}
function useMachine(machine, options) {
  const service = useService(machine, options);
  const state = useSnapshot(service.state);
  const typedState = state;
  return [typedState, service.send, service];
}

export { useMachine, useService };
