import type { Machine, MachineSrc,  StateMachine as S } from '@zag-js/core';
export declare function useService<TContext extends Record<string, any>, TState extends S.StateSchema, TEvent extends S.EventObject = S.AnyEventObject>(machine: MachineSrc<TContext, TState, TEvent>, options?: S.HookOptions<TContext, TState, TEvent>): Machine<TContext, TState, TEvent>;
export declare function useMachine<TContext extends Record<string, any>, TState extends S.StateSchema, TEvent extends S.EventObject = S.AnyEventObject>(machine: MachineSrc<TContext, TState, TEvent>, options?: S.HookOptions<TContext, TState, TEvent>): readonly [S.State<TContext, TState, TEvent>, (evt: S.Event<TEvent>) => void, Machine<TContext, TState, TEvent>];
