import type { NormalizeProps, PropTypes } from "@zag-js/types";
import type { Option, OptionGroupLabelProps, OptionGroupProps, OptionProps, Send, State } from "./select.types";
export declare function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): {
    /**
     * Whether the select is open
     */
    isOpen: boolean;
    /**
     * The currently highlighted option
     */
    highlightedOption: Option | null;
    /**
     * The currently selected option
     */
    selectedOption: Option | null;
    /**
     * Function to focus the select
     */
    focus(): void;
    /**
     * Function to open the select
     */
    open(): void;
    /**
     * Function to close the select
     */
    close(): void;
    /**
     * Function to set the selected option
     */
    setSelectedOption(value: Option): void;
    /**
     * Function to set the highlighted option
     */
    setHighlightedOption(value: Option): void;
    /**
     * Function to clear the selected option
     */
    clearSelectedOption(): void;
    /**
     * Returns the state details of an option
     */
    getOptionState: (props: OptionProps) => {
        isDisabled: boolean;
        isHighlighted: boolean;
        isSelected: boolean;
    };
    labelProps: T["label"];
    positionerProps: T["element"];
    triggerProps: T["button"];
    getOptionProps(props: OptionProps): T["element"];
    getOptionGroupLabelProps(props: OptionGroupLabelProps): T["element"];
    getOptionGroupProps(props: OptionGroupProps): T["element"];
    hiddenSelectProps: T["select"];
    contentProps: T["element"];
};
