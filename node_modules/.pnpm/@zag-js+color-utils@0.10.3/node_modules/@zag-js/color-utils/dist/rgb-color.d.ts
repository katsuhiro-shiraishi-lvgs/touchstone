import { Color } from "./color";
import { ColorChannel, ColorChannelRange, ColorFormat, ColorType } from "./types";
export declare class RGBColor extends Color {
    private red;
    private green;
    private blue;
    private alpha;
    constructor(red: number, green: number, blue: number, alpha: number);
    static parse(value: string): RGBColor | undefined;
    toString(format: ColorFormat | "css"): string;
    toFormat(format: ColorFormat): ColorType;
    toHexInt(): number;
    /**
     * Converts an RGB color value to HSB.
     * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB.
     * @returns An HSBColor object.
     */
    private toHSB;
    /**
     * Converts an RGB color value to HSL.
     * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB.
     * @returns An HSLColor object.
     */
    private toHSL;
    clone(): ColorType;
    getChannelRange(channel: ColorChannel): ColorChannelRange;
    getColorSpace(): ColorFormat;
    private static colorChannels;
    getColorChannels(): [ColorChannel, ColorChannel, ColorChannel];
}
