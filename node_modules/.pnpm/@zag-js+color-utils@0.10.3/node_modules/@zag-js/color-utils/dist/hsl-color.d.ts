import { Color } from "./color";
import { ColorChannel, ColorChannelRange, ColorFormat, ColorType } from "./types";
export declare const HSL_REGEX: RegExp;
export declare class HSLColor extends Color {
    private hue;
    private saturation;
    private lightness;
    private alpha;
    constructor(hue: number, saturation: number, lightness: number, alpha: number);
    static parse(value: string): HSLColor | void;
    toString(format: ColorFormat | "css"): string;
    toFormat(format: ColorFormat): ColorType;
    /**
     * Converts a HSL color to HSB.
     * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_HSV.
     * @returns An HSBColor object.
     */
    private toHSB;
    /**
     * Converts a HSL color to RGB.
     * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_RGB_alternative.
     * @returns An RGBColor object.
     */
    private toRGB;
    clone(): ColorType;
    getChannelRange(channel: ColorChannel): ColorChannelRange;
    getColorSpace(): ColorFormat;
    private static colorChannels;
    getColorChannels(): [ColorChannel, ColorChannel, ColorChannel];
}
