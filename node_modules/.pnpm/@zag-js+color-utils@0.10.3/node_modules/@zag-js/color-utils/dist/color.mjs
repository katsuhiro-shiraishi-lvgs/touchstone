class Color {
  toHexInt() {
    return this.toFormat("rgb").toHexInt();
  }
  getChannelValue(channel) {
    if (channel in this) {
      return this[channel];
    }
    throw new Error("Unsupported color channel: " + channel);
  }
  withChannelValue(channel, value) {
    if (channel in this) {
      let clone = this.clone();
      clone[channel] = value;
      return clone;
    }
    throw new Error("Unsupported color channel: " + channel);
  }
  getColorSpaceAxes(xyChannels) {
    let { xChannel, yChannel } = xyChannels;
    let xCh = xChannel || this.getColorChannels().find((c) => c !== yChannel);
    let yCh = yChannel || this.getColorChannels().find((c) => c !== xCh);
    let zCh = this.getColorChannels().find((c) => c !== xCh && c !== yCh);
    return { xChannel: xCh, yChannel: yCh, zChannel: zCh };
  }
  isEqual(color) {
    return this.toHexInt() === color.toHexInt();
  }
}

export { Color };
