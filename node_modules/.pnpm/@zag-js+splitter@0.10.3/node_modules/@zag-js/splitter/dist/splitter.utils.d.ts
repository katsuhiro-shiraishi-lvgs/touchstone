import type { PanelId, MachineContext as Ctx,  NormalizedPanelData } from './splitter.types';
export declare function getNormalizedPanels(ctx: Ctx): NormalizedPanelData;
export declare function getHandlePanels(ctx: Ctx, id?: string | null): {
    before: {
        index: number;
        id: PanelId;
        size: number;
        minSize: number;
        maxSize: number;
        remainingSize: number;
        start: number;
        end: number;
    };
    after: {
        index: number;
        id: PanelId;
        size: number;
        minSize: number;
        maxSize: number;
        remainingSize: number;
        start: number;
        end: number;
    };
} | undefined;
export declare function getHandleBounds(ctx: Ctx, id?: string | null): {
    min: number;
    max: number;
} | undefined;
export declare function getPanelBounds(ctx: Ctx, id?: string | null): {
    before: {
        index: number;
        min: number;
        max: number;
        isAtMin: boolean;
        isAtMax: boolean;
        up(step: number): number;
        down(step: number): number;
    };
    after: {
        index: number;
        min: number;
        max: number;
        isAtMin: boolean;
        isAtMax: boolean;
        up(step: number): number;
        down(step: number): number;
    };
} | undefined;
export declare function clamp(value: number, min: number, max: number): number;
