import type { NormalizeProps, PropTypes } from "@zag-js/types";
import type { PanelId, PanelProps, ResizeTriggerProps, Send, State } from "./splitter.types";
export declare function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): {
    /**
     * Whether the splitter is focused.
     */
    isFocused: boolean;
    /**
     * Whether the splitter is being dragged.
     */
    isDragging: boolean;
    /**
     *  The bounds of the currently dragged splitter handle.
     */
    bounds: {
        min: number;
        max: number;
    } | undefined;
    /**
     * Function to set a panel to its minimum size.
     */
    setToMinSize(id: PanelId): void;
    /**
     * Function to set a panel to its maximum size.
     */
    setToMaxSize(id: PanelId): void;
    /**
     * Function to set the size of a panel.
     */
    setSize(id: PanelId, size: number): void;
    /**
     * Returns the state details for a resize trigger.
     */
    getResizeTriggerState(props: ResizeTriggerProps): {
        isDisabled: boolean;
        isFocused: boolean;
        panelIds: string[];
        min: number | undefined;
        max: number | undefined;
        value: number;
    };
    rootProps: T["element"];
    getPanelProps(props: PanelProps): T["element"];
    getResizeTriggerProps(props: ResizeTriggerProps): T["element"];
};
